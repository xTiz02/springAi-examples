spring.application.name=pgvector-demo
# HikariCP configuration
spring.datasource.hikari.maximum-pool-size=5

# Database configuration
spring.datasource.url = jdbc:postgresql://localhost:5432/vector
spring.datasource.username = user
spring.datasource.password = pass
spring.datasource.driver-class-name = org.postgresql.Driver
spring.jpa.database-platform = org.hibernate.dialect.PostgreSQLDialect
#conf por defecto de pgvector para vector_store
spring.ai.vectorstore.pgvector.index-type=hnsw
spring.ai.vectorstore.pgvector.distance-type=cosine_distance
spring.ai.vectorstore.pgvector.dimensions=768
#spring.ai.vectorstore.pgvector.remove-existing-vector-store-table=true
#remueve la tabla de vectores si ya existe para crear una nueva con las dimensiones especificadas
# Hibernate configuration
spring.jpa.hibernate.ddl-auto = update
spring.jpa.show-sql = true

#ollama config(el proyecto vector funciona pero el embedding model debe tener igual dmienciones que vector_Store)
#modelos que soportan funciones: mistral, llama3 y firefunction-v2
#conf por defecto de ollama para chat y embedding
spring.ai.ollama.base-url=http://localhost:11434
spring.ai.ollama.chat.model=phi3
#spring.ai.ollama.embedding.model=mistral 4096 dimensiones
#spring.ai.ollama.embedding.model=nomic-embed-text  768 dimensiones
spring.ai.ollama.embedding.model=nomic-embed-text
spring.ai.ollama.chat.options.temperature=0.5


#openai (pruebas proyect)
#spring.ai.openai.api-key=secret
#spring.ai.openai.chatQuestion.model=gpt-3.5-turbo
#spring.ai.openai.embedding.model=text-embedding-ada-002


#weather
weather.api-key=secret
weather.api-url=http://api.weatherapi.com/v1

#spring.threads.virtual.enabled=true